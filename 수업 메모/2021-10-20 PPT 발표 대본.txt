
메모리 : 가비지 컬렉터로 필요없는 데이터 지움 / 임시 저장 장치 / 처리 속도 빠름

하드디스크 : 용량이 아주 큰 저장 장치
 - 삭제해도 어딘가는 남아있음 (복구됨)

SSD : 비휘발과 휘발이 같이 있는 데이터 장치
 - 데이터를 삭제하면 아예 사라짐 (복구안됨)



엄 음 대강 X

--------------------------------------------
//2
공포의 달고나 커피를 기억하시나요?

코로나 이후 집에서 시간을 보내기시작하면서 엄청난 유행을 했죠

달고나 커피 , 한번쯤 만들어보신 분들은 모두 공감하실거 같습니다

--------------------------------------------
//3

본론으로 들어가서 
첫번째 주제선정 이유는 홈카페의 수요가 증가했기 때문입니다.

요즘은 집에서
커피를 직접 만들고 즐기는 것이 유행인데요.

‘홈카페’ 전성시대라고 해도 될만큼 열풍입니다.

이것을 ‘홈코노미 현상’ 이라고 하는데요
집의 역할이 이미 여러가지로 확장 되었기 때문에

홈카페 트렌드 역시 지속될 전망입니다.

--------------------------------------------
// 4
두번째 이유는 소상공인 상생 방안 입니다.

홈카페가 유행하는 동안 실제 카페 매출은 굉장히 감소했는데요.

코로나가 심각했을 때는 50% 이상 감소했다고 합니다예전에는 거리에 사람들이 이렇게 가득했다면
지금은 거리두기를 하고있죠

--------------------------------------------
// 5
이 두가지 현상의 해결책으로
구독경제 활성화가 이목을 끌고있습니다.

이제는 정부 차원에서 지원을 하고 있는데요.

많은 제품들이 서비스를 구독하는 형태로 바뀌고 있습니다.
미디어 콘텐츠, 소프트웨어, 게임, 의류, 농수산물, 식품, 음악, 그림, 자동차, 주거 까지
그 영역을 빠르게 넓혀가고 있구요

구독경제는 소비자와 판매자가 상생하는 비즈니스 모델이라고 할 수 있습니다.

--------------------------------------------
// 6
그 외에도 부수적인 이유가 있는데 한번 정리하고 가도록 하겠습니다.

MSA 아키텍쳐를 선택한 이유

장애 관점에서는 MSA아키텍쳐가 
서비스 별로 분리되어있기 때문에
일부 오류를 전체 서비스로 확장시키지 않고, 
부분적으로 격리할 수 있다는 장점이 있습니다.

-----
MSA microservice architectural
스스로 돌아 갈 수 있는 작은 서비스 
독립적 배포 가능 
-----
--------------------------------------------
// 7 
사례 분석은 비즈니스 모델과 서비스 모델
두가지 방면으로 분석을 했습니다.

비즈니스는 프릿츠라는 커피 브랜드를 분석했는데요
이 브랜드는 실제 카페 매장과 
원두를 생산하는 로스터리
구독이 가능한 온라인 서비스 제공하고 있습니다.

이 페이지는 원두 구독 상세페이지구요, 옆에 결제 옵션 창이 함께 보여집니다.

저희도 상세 페이지 안에 이렇게 주문 옵션을 구현할 생각이구요
여기서 주문 정보를 다음 프로세스로 전달 할 생각입니다.

--------------------------------------------
// 8
SWOT 분석도 해봤는데요,

이 사업의 강점은 ~~ 이고
외부적인 기회는 ~~ 입니다.
또 내부적인 약점은 ~~이고,
외부적인 위험 요소는 ~~ 입니다.

--------------------------------------------
// 9
서비스 모델은 배달의민족을 분석했습니다

비록 컨텐츠는 커피가 아니지만, 

소비자와 판매자를 이어준다는 
공통점을 가지고 있어서,
배민 서비스 모델을 참고 하였습니다.

관리자 입장에서는 소비자도 고객이고, 판매자도 고객이기 때문에
양면시장이라고 하구요.

우선 판매자가 등록으로 하고 메뉴판을 올려놓으면
소비자가 그걸보고 주문을하면서 결제를하면,
관리자는 대금을 전달하고 
판매자가 지불한 수수료를 가지고 
배민 라이더 서비스를 제공을 하는 구조 입니다.

--------------------------------------------
// 10
이것은 배민 판매자를 위한 매출 관리 페이지 인데요.

업주가 업장의 상태를 한눈에 보기 좋게 대쉬보드 형태로 구현 했습니다.

--------------------------------------------
// 11
배민 블로그에서 백엔드 아키텍쳐를 찾을 수 있었는데,

현재 배민에서 쓰는 기술 자체가 복잡해서
저희 프로젝트에 활용하기에는 무리가 있다고 생각합니다.

이건 참고만 하시구요

-----
** SQRS 아키텍쳐
많은 사용자가 / 동일한 데이터에 병렬로 액세스하는 / 공동 작업 도메인. 
애플리케이션에서 CQRS를 구현하면 / 성능, 확장성 및 보안을 최대화할 수 있습니다. 

** MSA 아키텍쳐 (Micro Service Architecture)
단일 프로그램을 각 컴포넌트 별로 나누어 작은 서비스의 조합으로 구축하는 방법입니다.
서비스 자체는 하나의 모놀리틱 아키텍쳐와 유사한 구조를 가짐
서비스는 독립적으로 배포가 가능해야함
서비스는 다른 서비스에 대한 의존성이 최소화 되어야함
--------------------------------------------
// 12
어떤 언어와 기술을 쓰는지도 궁금해서
개발자 채용공고를 참고했습니다.

주문 접수, 주문 서비스 모두 저희가 사용하게 될 기능이구요
배민은 이러한 언어를 사용하는 것을 알 수 있었습니다 

--------------------------------------------
// 13
저희가 사용할 기술은 다음과 같습니다.

-----

프론트 엔드 -> 리액트 프레임워크 위주 구현

상태관리 -> 리덕스

백엔드 연동 ->  리덕스 사가

시각적 효과 -> 부트스트랩

-----

백엔드 -> 스프링 프레임워크, 스프링 부트로 서버환경 구성
롬복 라이브러리를 이용 -> 서버 구현의 편의성 더함
JPA 사용하여 postgreSQL로 데이터를 영속화 하여 저장

-----

데이터 베이스 
 postgre SQL DB : 데이터 영속화 저장
    - 영속화 : 메모리에 들어있는 데이터를 하드디스크에 옮겨서 데이터가 휘발되지 않도록 저장
 redis DB : 캐시데이터 저장

-----

클라우드 서버

RDS 클라우드 서버에 데이터베이스를 등록
EC2 서버에 각서비스를 등록 

레빗엠큐 => 
각 EC2서버에 원활한 데이터 전달을 위해 / 메시지큐 라는 데이터 전송방식 사용했는데,
이 메시지 큐를 RabbitMQ라는 미들웨어로 구현

--------------------------------------------
// 14
저희 조의 프로세스 흐름도 입니다.
크게 세파트로 나눌 수 있구요.
한사람이 한 파트씩 담당합니다.
-----

파트너 서비스

[파트너 관리]<---->[파트너쉽 신청]
파트너쉽 신청을 위해 양식에 맞춰 데이터 전송
유효성검사를 통해 승인여부를 판단하여 파트너에게 전달합니다.

[판매제품 관리]---->[통합제품 관리]---->[제품목록]

판매자가 판매할 제품을 동록  (관리자 DB 에 등록)
관리자는 자신의 DB 안에 있는 판매자 정보와 제품정보를 합쳐서 
고객의 제품목록으로 보내줌
 (고객은 고객DB에 등록  {제품+판매자}  한묶음으로)

[제품상세]
제품 상세에서 해당 제품의 주문정보를 구독으로 넘김

[구독] 
소비자 카드정보 + 주문정보  => [결제처리] 컴포넌트로 보냄

[결제처리] 
 * 결제처리 프로세스
    카드정보 + 주문정보를 받으면
결제처리 컴포넌트에서 toss SDK가 toss payment server에 연결요청을 보낸다.
두번 돌음
연결요청 => 연결 승인
결제요청 =>  결제 승인 or 결제 실패
카드정보 + 주문정보 => 결제요청할 때 보냄

[결제처리] -> [구독]
결제 요청에 대한 응답을 구독으로 보냄
1. 구독에서 결제 승인이 되면, 소비자 DB에 결제정보 저장 / 결제 실패된 데이터는 DB에 저장하지 않음
2. [결제 내역 관리] 로 결제 내역 전송

 + 부가 [마이페이지]
결제가 승인된 데이터를 DB에서 꺼내서 보여줌

-----

네 여기까지가 저희 팀의 프로세스 흐름도 설명이였구요
다음으로 넘어가겠습니다            

-------질문&답변-----
1. 왜 통합제품관리로 제품정보를 보내는가?
소비자가 잘못된 정보를 받는 것을 방지하기 위해
       어드민에서 유효성 검사를 통해
같은 상품 데이터 중복 방지
잘못된 데이터 방지

--------------------------------------------
// 15
네 프로젝트 일정인데요

저희는 지금 1주차 / 기획단계를 완성하였구요
이번주부터 2주차 / 분석 및 설계 단계에 들어갈 예정입니다.

--------------------------------------------
// 16
마지막으로 팀원소개를 하고 마치도록 하겠습니다.

저는 유저서비스를 담담하구요
재윤님은 비즈니스 서비스
준호님은 어드민 서비스를 담당하기로 했습니다.
나머지는 그외에 업무 분담이구요

저희 조의 프로젝트 발표는 여기까지 입니다
감사합니다!

--------------------------------------------




