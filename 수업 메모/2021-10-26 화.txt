2021-10-26 화 

서버사이드 렌더링, 클라이언트 사이드 렌더링


// 애자일 소프트웨어 방법론
애자일 민첩한 기민한이라는 의미, 변화에 유연하게 대응하자

프로젝트 백로그 - 로그사항
sprint backlog - 그것을 기간 단위로 잘게 쪼갠것
sprint - 반복주기
product increment - 산출물


2. 스크럼 - 회의
제품 백로그 - 모든 요구사항을 순선순위로 나열
product owner (PM) 


XP
회의 반복주기 - 이터레이션


locl-a; -> dev => 

======================================
유즈케이스, 분석객체모델 까지 낼 오전 안에 끝내기

내가 보낼거

// sub => Admin


// sub => Partner

제품정보
사장님 정보

주문한 제품정보
주문정보 
  -주문자 정보


매출정산

  - 업주 정보
  - 주문정보
  - 결제 금액 정보

===================================================

// foreign key (외래키)
- 다른테이블의 pk를 참조하고 있는 컬럼 제약조건
- 외래키 컬럼에는 참조하고 있는 테이블의 pk값만 들어갈수있음.
- 다른값이 들어가면 제약조건 에러 발생

-- 데이터의 정합성을 보장하는 방법
-- 다른 테이블을 참조할 때는 PK값만 참조하고, 없는 PK값은 들어가면 안됨

  commerce_order
   id(PK)
    1
    2

  commerce_order_detail
  commerce_order_id(PK, FK) seq(PK)
                            1              1
                            1              2
                            2              2
                            3              1   (x 안됨, 제약조건에 안맞음)
** 제약조건은 commerce_order Id 안에 있는 아이디만 (Foreign Id)로 쓸수있음


===================================================

// 하위테이블
주문정보 pk: 1
 ㄴ 주문제품1  pk: 1  1
 ㄴ 주문제품2  pk: 1  2

상위 데이터 값가지고 몇번째 주문제품인지 처리

===================================================
집합루트객체

주문1
  ㄴ 주문제품1 - 마스크 50매
  ㄴ 주문제품2 - 손소독제 500ml

주문2
  ㄴ주문제품1 - 마스크 20매

제품
  ㄴ마스크
       - 주문1/주문제품1
       - 주문2/주문제품1
  ㄴ손소독제 500ml  
       - 주문1/주문제품2

===================================================

데이터베이스 erd표기법

* 비식별관계 (non-identifying relationship)
 : ------  점선
  => 외래키가 PK가 아님

* 식별관계 (identifying relationship)
 : ㅡㅡㅡ 줄선
  => 외래키가 PK임

===================================================


// 테이블에 데이터 추가하기
   * 실제 엔티티객체랑 요청응답객체는 따로 분리하는 것이 좋음

// entity추가 명령어는 3개이지만 , 논리적으로 1개의 처리단위임
 ** 셋 중 하나라도 에러가 나면 처리되면 안됨  -> 전체가 들어가면 안됨

** 주문 기본정보 1건과, 주문제품정보 2건을 저장
insert into commerce_order...;
insert into commerce_order_detail...;
insert into commerce_order_detail...;

** 트랜젝션 처리에서 오류나면 id값은 반영이 됨
** 오류났던 주문Id 건너뛰고 반영된 주문id 가 나옴  (1234 순이 아니고 중간이 비어있음)

@Transactional(rollbackOn = Exception.class)






